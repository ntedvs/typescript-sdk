name: ci

on: [push]

jobs:
    compile:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up node
              uses: actions/setup-node@v3

            - name: Compile
              run: yarn && yarn build

    unit-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up node
              uses: actions/setup-node@v3
            
            - name: Install dependencies
              run: yarn install

            - name: Unit Test
              run: yarn jest tests/unit

    integration-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up node
              uses: actions/setup-node@v3
            
            - name: Install dependencies
              run: yarn install
            
            - name: Integration Server Test
              env: 
                VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
              run: yarn jest tests/custom

    coverage:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up node
              uses: actions/setup-node@v3

            - name: Install dependencies
              run: yarn install

            - name: Integration Server Test
              env:
                VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
              run: yarn jest --coverage tests/unit tests/integration tests/custom

    publish:
        needs: [compile, unit-test, integration-test]
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up node
              uses: actions/setup-node@v3

            - name: Install dependencies
              run: yarn install

            - name: Build
              run: yarn build

            - name: Publish to npm
              run: |
                  npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
                  npm publish --access public
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
