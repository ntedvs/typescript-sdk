types:
  ContextualizedembeddingsApiRequestInputType:
    enum:
      - query
      - document
    docs: >
      Type of the input text. Defaults to `null`. Other options: `query`,
      `document`. <ul> <li> When `input_type` is `null`, the embedding model
      directly converts your input data into  numerical vectors. </li> <li> For
      retrieval/search purposes, we recommend specifying whether your inputs are
      intended  as queries or documents by setting `input_type` to `query` or
      `document`, respectively. </li> <li> When specified, Voyage prepends a
      specific prompt to your input before vectorizing it,  helping the model
      create more effective vectors tailored for retrieval/search tasks. </li>
      </ul>
    inline: true
    source:
      openapi: openapi/openapi.yml
  ContextualizedembeddingsApiRequestOutputDtype:
    enum:
      - float
      - int8
      - uint8
      - binary
      - ubinary
    docs: >
      The data type for the embeddings to be returned. Defaults to `float`.
      Other options: `int8`, `uint8`, `binary`, `ubinary`.
    inline: true
    source:
      openapi: openapi/openapi.yml
  ContextualizedembeddingsApiResponseResultsItemEmbeddingsItem:
    properties:
      object:
        type: optional<string>
        docs: The object type, which is always "embedding".
      embedding:
        type: optional<list<double>>
        docs: >
          The contextualized embedding vector for this chunk, represented as an
          array of numbers. The data type depends on the `output_dtype`
          parameter: floating-point numbers for `float`, integers for `int8`,
          `uint8`, `binary`, and `ubinary`.
      index:
        type: optional<integer>
        docs: |
          The index of this chunk within the document.
    source:
      openapi: openapi/openapi.yml
    inline: true
  ContextualizedembeddingsApiResponseResultsItem:
    properties:
      embeddings:
        type: >-
          optional<list<ContextualizedembeddingsApiResponseResultsItemEmbeddingsItem>>
        docs: An array of embeddings for each chunk in the document.
      document_index:
        type: optional<integer>
        docs: The index of this document within the input list.
    source:
      openapi: openapi/openapi.yml
    inline: true
  ContextualizedembeddingsApiResponseUsage:
    properties:
      total_tokens:
        type: optional<integer>
        docs: >-
          The total number of tokens used for computing the contextualized
          embeddings.
    source:
      openapi: openapi/openapi.yml
    inline: true
  ContextualizedembeddingsApiResponse:
    properties:
      object:
        type: optional<string>
        docs: The object type, which is always "contextualized_embeddings".
      results:
        type: optional<list<ContextualizedembeddingsApiResponseResultsItem>>
        docs: >-
          An array of contextualized embedding results, one for each input
          document.
      model:
        type: optional<string>
        docs: Name of the model used.
      usage: optional<ContextualizedembeddingsApiResponseUsage>
    source:
      openapi: openapi/openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    contextualizedembeddings-api:
      path: /contextualizedembeddings
      method: POST
      auth: true
      docs: >-
        The Voyage contextualized embeddings endpoint receives as input a list
        of documents (each document is a list of chunks), and returns
        contextualized embeddings for each chunk. The embeddings capture both
        the local chunk content and the global document context, making them
        particularly effective for retrieval tasks where understanding
        document-level context is important.
      source:
        openapi: openapi/openapi.yml
      display-name: Contextualized embeddings
      request:
        name: ContextualizedembeddingsApiRequest
        body:
          properties:
            inputs:
              docs: >
                A list of documents, where each document is represented as a
                list of text chunks (strings). <ul> <li> The maximum number of
                inputs (documents) is 1,000. </li> <li> The total number of
                chunks across all documents cannot exceed 16,000. </li> <li> The
                total number of tokens across all inputs cannot exceed 120,000.
                </li> </ul>
              type: list<list<string>>
            model:
              type: string
              docs: >
                Name of the model. Currently, the recommended model is
                `voyage-context-3`, which has a context  length of 32,000 tokens
                and supports output dimensions of 256, 512, 1024, and 2048.
            input_type:
              type: optional<ContextualizedembeddingsApiRequestInputType>
              docs: >
                Type of the input text. Defaults to `null`. Other options:
                `query`, `document`. <ul> <li> When `input_type` is `null`, the
                embedding model directly converts your input data into 
                numerical vectors. </li> <li> For retrieval/search purposes, we
                recommend specifying whether your inputs are intended  as
                queries or documents by setting `input_type` to `query` or
                `document`, respectively. </li> <li> When specified, Voyage
                prepends a specific prompt to your input before vectorizing it, 
                helping the model create more effective vectors tailored for
                retrieval/search tasks. </li> </ul>
            output_dimension:
              type: optional<integer>
              docs: >
                The number of dimensions for resulting output embeddings.
                Defaults to 1024 for `voyage-context-3`. Supported dimensions:
                256, 512, 1024, 2048.
            output_dtype:
              type: optional<ContextualizedembeddingsApiRequestOutputDtype>
              docs: >
                The data type for the embeddings to be returned. Defaults to
                `float`. Other options: `int8`, `uint8`, `binary`, `ubinary`.
        content-type: application/json
      response:
        docs: Success
        type: ContextualizedembeddingsApiResponse
        status-code: 200
      examples:
        - name: Success
          request:
            inputs:
              - - inputs
            model: model
          response:
            body:
              object: object
              results:
                - embeddings:
                    - {}
                  document_index: 1
              model: model
              usage:
                total_tokens: 1
          code-samples:
            - language: shell
              code: |-
                curl --request POST \
                     --url https://api.voyageai.com/v1/contextualizedembeddings \
                     --header "Authorization: Bearer $VOYAGE_API_KEY" \
                     --header "content-type: application/json" \
                     --data '
                {
                  "inputs": [
                    [
                      "This is the first chunk of the first document.",
                      "This is the second chunk of the first document."
                    ],
                    [
                      "This is the first chunk of the second document.",
                      "This is the second chunk of the second document."
                    ]
                  ],
                  "model": "voyage-context-3"
                }
                '
  source:
    openapi: openapi/openapi.yml
  display-name: Endpoints
