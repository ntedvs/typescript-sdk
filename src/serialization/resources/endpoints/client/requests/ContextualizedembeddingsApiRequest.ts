/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as VoyageAI from "../../../../../api/index";
import * as core from "../../../../../core";
import { ContextualizedembeddingsApiRequestInputType } from "../../types/ContextualizedembeddingsApiRequestInputType";
import { ContextualizedembeddingsApiRequestOutputDtype } from "../../types/ContextualizedembeddingsApiRequestOutputDtype";

export const ContextualizedembeddingsApiRequest: core.serialization.Schema<
    serializers.ContextualizedembeddingsApiRequest.Raw,
    VoyageAI.ContextualizedembeddingsApiRequest
> = core.serialization.object({
    inputs: core.serialization.list(core.serialization.list(core.serialization.string())),
    model: core.serialization.string(),
    inputType: core.serialization.property("input_type", ContextualizedembeddingsApiRequestInputType.optional()),
    outputDimension: core.serialization.property("output_dimension", core.serialization.number().optional()),
    outputDtype: core.serialization.property("output_dtype", ContextualizedembeddingsApiRequestOutputDtype.optional()),
});

export declare namespace ContextualizedembeddingsApiRequest {
    interface Raw {
        inputs: string[][];
        model: string;
        input_type?: ContextualizedembeddingsApiRequestInputType.Raw | null;
        output_dimension?: number | null;
        output_dtype?: ContextualizedembeddingsApiRequestOutputDtype.Raw | null;
    }
}
