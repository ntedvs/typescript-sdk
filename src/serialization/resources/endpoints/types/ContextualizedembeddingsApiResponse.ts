/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as VoyageAI from "../../../../api/index";
import * as core from "../../../../core";
import { ContextualizedembeddingsApiResponseResultsItem } from "./ContextualizedembeddingsApiResponseResultsItem";
import { ContextualizedembeddingsApiResponseUsage } from "./ContextualizedembeddingsApiResponseUsage";

export const ContextualizedembeddingsApiResponse: core.serialization.ObjectSchema<
    serializers.ContextualizedembeddingsApiResponse.Raw,
    VoyageAI.ContextualizedembeddingsApiResponse
> = core.serialization.object({
    object: core.serialization.string().optional(),
    results: core.serialization.list(ContextualizedembeddingsApiResponseResultsItem).optional(),
    model: core.serialization.string().optional(),
    usage: ContextualizedembeddingsApiResponseUsage.optional(),
});

export declare namespace ContextualizedembeddingsApiResponse {
    interface Raw {
        object?: string | null;
        results?: ContextualizedembeddingsApiResponseResultsItem.Raw[] | null;
        model?: string | null;
        usage?: ContextualizedembeddingsApiResponseUsage.Raw | null;
    }
}
