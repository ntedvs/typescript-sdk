/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as VoyageAI from "../../../api/index";
import * as core from "../../../core";
import { ContextualizedEmbedRequestInputType } from "../../types/ContextualizedEmbedRequestInputType";
import { ContextualizedEmbedRequestOutputDtype } from "../../types/ContextualizedEmbedRequestOutputDtype";

export const ContextualizedEmbedRequest: core.serialization.Schema<
    serializers.ContextualizedEmbedRequest.Raw,
    VoyageAI.ContextualizedEmbedRequest
> = core.serialization.object({
    inputs: core.serialization.list(core.serialization.list(core.serialization.string())),
    model: core.serialization.string(),
    inputType: core.serialization.property("input_type", ContextualizedEmbedRequestInputType.optional()),
    outputDimension: core.serialization.property("output_dimension", core.serialization.number().optional()),
    outputDtype: core.serialization.property("output_dtype", ContextualizedEmbedRequestOutputDtype.optional()),
});

export declare namespace ContextualizedEmbedRequest {
    interface Raw {
        inputs: string[][];
        model: string;
        input_type?: ContextualizedEmbedRequestInputType.Raw | null;
        output_dimension?: number | null;
        output_dtype?: ContextualizedEmbedRequestOutputDtype.Raw | null;
    }
}
